{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../Security/authentication.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nfunction LoginComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Max Length is 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Max Length is 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, _AuthenticationService) {\n      this.formBuilder = formBuilder;\n      this._AuthenticationService = _AuthenticationService;\n      this.loginForm = this.formBuilder.group({\n        UserName: new FormControl('', Validators.maxLength(6)),\n        Password: new FormControl('', Validators.maxLength(6)),\n        Branch: new FormControl('')\n      });\n    }\n    onSubmit(UserData) {\n      this._AuthenticationService.GetUserData(UserData.UserName, UserData.Password);\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"UserName\", \"matInput\", \"\"], [4, \"ngIf\"], [\"formControlName\", \"Password\", \"matInput\", \"\", \"type\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit(ctx.loginForm.value);\n        });\n        i0.ɵɵelementStart(1, \"mat-form-field\")(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 1);\n        i0.ɵɵtemplate(5, LoginComponent_mat_error_5_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\")(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵtemplate(10, LoginComponent_mat_error_10_Template, 2, 0, \"mat-error\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵtext(12, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"UserName\").hasError(\"maxLength\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"Password\").hasError(\"maxLength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.MatFormField, i4.MatLabel, i4.MatError, i5.MatInput, i6.MatButton]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}